package Konami.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

@Generated
public class QueriesGenerated {
  public final boolean NEEDS_OPCONTEXT = false;

  public static Object propertyMacro_GetPropertyValue_835646908222371801(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "ID");
  }

  public static SNode sourceNodeQuery_1695169151245511622(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ledError", true);
  }

  public static SNode sourceNodeQuery_1695169151245568963(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), "ledOK", true);
  }

  public static SNode sourceNodeQuery_1695169151245644134(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "konami", true), "pinButton", true);
  }

  public static SNode sourceNodeQuery_835646908222361868(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "konami", true), "pinX", true);
  }

  public static SNode sourceNodeQuery_835646908222365373(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), "konami", true), "pinY", true);
  }

  public static Iterable<SNode> sourceNodesQuery_835646908222370899(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "code", true);
  }

  public static void mappingScript_CodeBlock_835646908222287883(final MappingScriptContext _context) {
    SNode konami = ListSequence.fromList(SModelOperations.getNodes(_context.getModel(), "Konami.structure.KonamiProgram")).first();
    SNodeOperations.replaceWithNewChild(konami, "ArduinoML.structure.ArduinoML");

  }
}
