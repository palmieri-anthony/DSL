package ArduinoML.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.lang.editor.table.runtime.TableModelFactory;
import jetbrains.mps.lang.editor.table.runtime.TableModel;
import jetbrains.mps.lang.editor.table.runtime.XYCTableModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.editor.table.runtime.EditorCell_Table;

public class DecisionTable_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_h1ymql_a(editorContext, node);
  }

  private EditorCell createCollection_h1ymql_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_h1ymql_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_h1ymql_a0(editorContext, node));
    editorCell.addEditorCell(this.createTable_h1ymql_b0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_h1ymql_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_h1ymql_d0(editorContext, node));
    editorCell.addEditorCell(this.createTable_h1ymql_e0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_h1ymql_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Conditions : ");
    editorCell.setCellId("Constant_h1ymql_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createTable_h1ymql_b0(EditorContext editorContext, SNode node) {
    TableModelFactory creator = new TableModelFactory() {
      public TableModel createTableModel(final SNode node, final EditorContext editorContext) {
        return new XYCTableModel(node, SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "colHeader"), SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "rowHeader"), SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "values"), editorContext);
      }
    };
    jetbrains.mps.openapi.editor.cells.EditorCell_Collection editorCell = EditorCell_Table.createTable(editorContext, node, creator.createTableModel(node, editorContext), "Table_h1ymql_b0");
    editorCell.setCellId("Table_h1ymql_b0_0");
    return editorCell;
  }

  private EditorCell createConstant_h1ymql_c0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "");
    editorCell.setCellId("Constant_h1ymql_c0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_h1ymql_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Actions : ");
    editorCell.setCellId("Constant_h1ymql_d0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createTable_h1ymql_e0(EditorContext editorContext, SNode node) {
    TableModelFactory creator = new TableModelFactory() {
      public TableModel createTableModel(final SNode node, final EditorContext editorContext) {
        return new XYCTableModel(node, SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "colHeader"), SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "rowAction"), SLinkOperations.findLinkDeclaration("ArduinoML.structure.DecisionTable", "valuesAction"), editorContext);
      }
    };
    jetbrains.mps.openapi.editor.cells.EditorCell_Collection editorCell = EditorCell_Table.createTable(editorContext, node, creator.createTableModel(node, editorContext), "Table_h1ymql_e0");
    editorCell.setCellId("Table_h1ymql_e0_0");
    return editorCell;
  }
}
