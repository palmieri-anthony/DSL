package ArduinoML.textGen;

/*Generated by MPS */

import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.textGen.SNodeTextGen;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import ArduinoML.behavior.Pin_Behavior;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public abstract class Component {
  public static void init_component(List<SNode> pins, String type, final SNodeTextGen textGen) {
    for (SNode pin : ListSequence.fromList(pins)) {
      textGen.indentBuffer();
      textGen.append("pinMode(");
      textGen.append(type);
      textGen.append(",");
      textGen.append(Pin_Behavior.call_pinNumber_4453370684997791203(pin));
      textGen.append(");");
      textGen.appendNewLine();
    }
  }

  public static void condition_component(SNode component, final SNodeTextGen textGen) {
    SNode pin = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), component, "virtual_getPins_4453370684997361065", new Object[]{})).first();
    textGen.append(Component.action_or_condition("Read", pin, textGen));
    textGen.append(")");
  }

  public static void condition_component_with_specific_pin(SNode component, SNode pin, final SNodeTextGen textGen) {
    textGen.append(Component.action_or_condition("Read", pin, textGen));
    textGen.append(")");
  }

  public static void action_component(SNode component, final SNodeTextGen textGen) {
    SNode pin = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), component, "virtual_getPins_4453370684997361065", new Object[]{})).first();
    textGen.append(Component.action_or_condition("Write", pin, textGen));
    textGen.append(",");
  }

  public static void action_component_with_specific_pin(SNode component, SNode pin, final SNodeTextGen textGen) {
    textGen.append(Component.action_or_condition("Write", pin, textGen));
    textGen.append(",");
  }

  protected static String action_or_condition(String type, SNode pin, final SNodeTextGen textGen) {
    return BehaviorReflection.invokeVirtual(String.class, pin, "virtual_getType_4453370684997412076", new Object[]{}) + type + "(" + Pin_Behavior.call_pinNumber_4453370684997791203(pin);

  }
}
