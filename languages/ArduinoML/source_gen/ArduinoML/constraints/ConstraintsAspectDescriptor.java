package ArduinoML.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 2:
        return new ArduinoML_Constraints();
      case 4:
        return new Pin_Constraints();
      case 3:
        return new Condition_Constraints();
      case 1:
        return new ActionOnComponent_Constraints();
      case 0:
        return new ActionCallModule_Constraints();
      default:
        // todo: illegal in some cases? 
        return new BaseConstraintsDescriptor(fqName);
    }
  }

  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"ArduinoML.structure.ActionCallModule", "ArduinoML.structure.ActionOnComponent", "ArduinoML.structure.ArduinoML", "ArduinoML.structure.Condition", "ArduinoML.structure.Pin"};
}
